post:
  description: 스터디 가입
  summary: 스터디원 가입
  tags: [ Study ]
  parameters:
    - in: header
      name: Authorization
      schema:
        type: string
      description: Bearer 인증 토큰 (access-token)
      required: true
    - in: path
      name: id
      schema:
        type: string
      description: 스터디 식별자
      required: true
  responses:
    '204':
      description: 성공
    '401':
      description: 실패 - 로그인 필요
    '403':
      description: 실패 - 권한 없음
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: 오류 메세지
                example: 초대되지 않은 사용자입니다.

# email 대신 uid로 초대하면 이메일로 들어가지 않아도 된다.
# 1. 원하는 사람을 초대 -> 회원가입 X
# 이메일, uid 검색
# 1. 아직 회원가입하지 않은 사람을 초대 가능 -> 회원가입 유도 ㅆㄱㄴ
# 단. 잘못된 사람을 초대할 수도 -> 초대한 이메일을 관리로 커버
# 초대한 이메일 관리 좀 빡쌤. 그냥 Study_Member 테이블 하나 만들어서 어떤 스터디에 어떤 멤버를 초대했는지 관리하는 것도 not bad

# 1. 검색 시 uid, email
# 2. email 대신 uid만 사용하여 초대
# 3. email 사용 시 회원가입하지 않은 사람도 초대 가능?

# 검색 기능
# 이메일로 멤버 검색 후 초대 vs 이메일로 초대 링크 전송
# 전 -> 검색 기능
# 후 -> 검색 기능 X, 이메일로 인증 링크
# 초대된 이메일을 관리할 필요가 있나? -> 강퇴 기능으로 커버


# 관리페이지 필요
# 1. 초대가 성공적으로 됐는지 확인
# 2. 초대를 취소

# 검색 시 uid, email

# email 대신 uid만 사용하여 초대
# 둘 다 돼야한다.
# 이메일을 아는데 uid는 모르는 경우가 있음 -> 확인하기 귀찮음

# 알림 기능을 활용하여 초대 수락

# 1. 이메일, uid로 유저 검색 후 초대
# 2. 해당 유저에게 스터디 초대 알림 발송
# 3. 스터디원 관리 페이지에서 초대 현황 확인 가능
# 4. 초대받은 유저는 스터디 초대 수락 및 거절
